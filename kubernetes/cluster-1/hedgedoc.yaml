# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.2.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: hedgedoc
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        pod:
          annotations:
            instrumentation.opentelemetry.io/inject-sdk: "true"
        containers:
          main:
            image:
              repository: caddy
              tag: 2.8.4
            env:
              HD_BASE_URL: http://hedgedoc.${PUBLIC_DOMAIN}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
      backend:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        pod:
          annotations:
            instrumentation.opentelemetry.io/inject-nodejs: "true"
          securityContext:
            fsGroup: 1000
          nodeSelector:
            kubernetes.io/arch: amd64
        containers:
          main:
            image:
              repository: ghcr.io/hedgedoc/hedgedoc/backend
              tag: 2.0.0-alpha.2
            env:
              HD_BASE_URL: https://hedgedoc.${PUBLIC_DOMAIN}
              HD_DATABASE_TYPE: sqlite
              HD_DATABASE_NAME: hedgedoc.sqlite
              HD_MEDIA_BACKEND: filesystem
              HD_MEDIA_BACKEND_FILESYSTEM_UPLOAD_PATH: uploads/
              HD_AUTH_LOCAL_ENABLE_LOGIN: "true"
              HD_AUTH_LOCAL_ENABLE_REGISTER: "true"
            envFrom:
              - secretRef:
                  name: hedgedoc
            # TODO wrong port
            # probes:
            #   liveness:
            #     enabled: true
            #   readiness:
            #     enabled: true
            #   startup:
            #     enabled: true
      frontend:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        pod:
          annotations:
            instrumentation.opentelemetry.io/inject-nodejs: "true"
        containers:
          main:
            image:
              repository: ghcr.io/hedgedoc/hedgedoc/frontend
              tag: 2.0.0-alpha.2
            env:
              HD_BASE_URL: https://hedgedoc.${PUBLIC_DOMAIN}
            # TODO wrong port
            # probes:
            #   liveness:
            #     enabled: true
            #   readiness:
            #     enabled: true
            #   startup:
            #     enabled: true
    configMaps:
      caddyfile:
        data:
          Caddyfile: |
            {$HD_BASE_URL}

            log {
              output stdout
              level WARN
              format console
            }

            tracing {
              span proxy
            }

            reverse_proxy /realtime http://hedgedoc-backend:3000
            reverse_proxy /api/* http://hedgedoc-backend:3000
            reverse_proxy /public/* http://hedgedoc-backend:3000
            reverse_proxy /uploads/* http://hedgedoc-backend:3000
            reverse_proxy /apidoc/* http://hedgedoc-backend:3000
            reverse_proxy /* http://hedgedoc-frontend:3001 {
              header_up X-Forwarded-Proto "https"
            }

    persistence:
      config:
        accessMode: ReadWriteOnce
        size: 1Gi
        advancedMounts:
          backend:
            main:
              - path: /usr/src/app/backend/uploads
      caddyfile:
        type: configMap
        name: "{{ .Release.Name }}-caddyfile"
        advancedMounts:
          main:
            main:
              - path: /etc/caddy/Caddyfile
                subPath: Caddyfile
    service:
      main:
        primary: true
        controller: main
        ports:
          http:
            port: 80
      backend:
        controller: backend
        ports:
          http:
            port: 3000
      frontend:
        controller: frontend
        ports:
          http:
            port: 3001
    route:
      main:
        parentRefs:
          - namespace: default
            name: ${CLUSTER_NAME}
        hostnames:
          - hedgedoc.${PUBLIC_DOMAIN}
        rules:
          - backendRefs:
              - name: hedgedoc
                port: 80
