apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry
  namespace: monitoring
spec:
  envFrom:
  - secretRef:
      name: opentelemetry-collector
  # https://github.com/open-telemetry/opentelemetry-operator/tree/main/cmd/otel-allocator
  # TODO install CRDs with https://github.com/prometheus-operator/prometheus-operator/releases
  mode: statefulset
  targetAllocator:
    enabled: true
    prometheusCR:
      enabled: true
  # target_allocator can be removed once this is merged: open-telemetry/opentelemetry-operator#1557
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus:
        config:
          scrape_configs:
          - job_name: otel-collector
          target_allocator:
            endpoint: http://my-targetallocator-service
            interval: 1m
            collector_id: $${POD_NAME}

    extensions:
      basicauth/traces:
        client_auth:
          username: $${env:TRACES_USERNAME}
          password: $${env:METRICS_PASSWORD}
      basicauth/metrics:
        client_auth:
          username: $${env:METRICS_USERNAME}
          password: $${env:METRICS_PASSWORD}
      basicauth/logs:
        client_auth:
          username: $${env:LOGS_USERNAME}
          password: $${env:METRICS_PASSWORD}

    exporters:
      otlp:
        endpoint: $${env:TRACES_ENDPOINT}
        tls:
          insecure: false
        auth:
          authenticator: basicauth/traces
      prometheusremotewrite:
        endpoint: $${env:METRICS_ENDPOINT}
        auth:
          authenticator: basicauth/metrics
        external_labels:
          cluster: $${env:CLUSTER_NAME}
      loki:
        endpoint: $${env:LOGS_ENDPOINT}
        auth:
          authenticator: basicauth/logs

    processors:
      spanmetrics:
        metrics_exporter: prometheusremotewrite

    service:
      extensions: [ basicauth/traces, basicauth/metrics, basicauth/logs, health_check, memory_ballast ]
      pipelines:
        metrics:
          receivers: [ prometheus ]
          exporters: [ prometheusremotewrite ]
        logs:
          receivers: [ filelog ]
          exporters: [ loki ]