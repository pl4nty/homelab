apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: your-spotify
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: true
      enableServiceLinks: true
      # nodeSelector:
      #   kubernetes.io/arch: arm64
    controllers:
      # Server
      main:
        strategy: &strat RollingUpdate
        rollingUpdate: &ru
          unavailable: 0
        pod: &pod
          annotations:
            instrumentation.opentelemetry.io/inject-nodejs: "true"
        containers:
          main:
            image:
              repository: yooooomi/your_spotify_server
              tag: 1.7.0
            env:
              TIMEZONE: ${TIMEZONE}
              API_ENDPOINT: https://spotify-api.${PUBLIC_DOMAIN}
              CLIENT_ENDPOINT: &client https://spotify.${PUBLIC_DOMAIN}
              CORS: *client
              MONGO_ENDPOINT: mongodb://your-spotify-mongodb:27017/your_spotify
            envFrom:
            - secretRef:
                name: your-spotify
      client:
        type: deployment
        strategy: *strat
        rollingUpdate: *ru
        pod: *pod
        containers:
          main:
            image:
              repository: yooooomi/your_spotify_client
              tag: 1.7.0
            env:
              TIMEZONE: ${TIMEZONE}
              API_ENDPOINT: https://spotify-api.${PUBLIC_DOMAIN}
      mongodb:
        type: statefulset
        # default, but there's a bug where statefulset is null by default
        # so statefulset.podManagementPolicy reference fails
        rollingUpdate: *ru
        statefulset:
          podManagementPolicy: OrderedReady
        containers:
          main:
            image:
              repository: docker.io/library/mongo
              tag: 6.0.4-focal
    service:
      # Server
      main:
        ports:
          http:
            port: 8080
      client:
        controller: client
        ports:
          http:
            port: 3000
      mongodb:
        controller: mongodb
        ports:
          http:
            port: 27017
    persistence:
      config:
        enabled: true
        advancedMounts:
          mongodb:
            main:
              - path: /data/db
