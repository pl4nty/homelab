apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gitlab-runner
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: gitlab-runner
      version: 0.58.0
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    podAnnotations:
      sidecar.opentelemetry.io/inject: "monitoring/opentelemetry-sidecar" # go currently requires sidecar, but it's not enabled automatically
      instrumentation.opentelemetry.io/inject-go: "true-sidecar-gitlab"
      instrumentation.opentelemetry.io/otel-go-auto-target-exe: "/usr/bin/gitlab-runner"
    gitlabUrl: https://gitlab.com/
    rbac:
      create: true
      clusterWideAccess: false
      rules: 
      - apiGroups: [""]
        resources: ["*"]
        verbs: ["*"]
    unregisterRunners: true
    runners:
      secret: gitlab-runner
      # not sure why, but this variable doesn't get filled
      # [runners.kubernetes.node_selector]
      #   "kubernetes.io/arch" = "$CLOUD_ARCH"
      # we need a tag anyway - running tests on k8s hits node volume limits, as pod_spec can't be scoped to just build jobs (eg annotations)
      # this would break multiarch clusters...
      tags: arm64
      
      # default GitLab helper image is arch-specific, but Bitnami provides multi-arch image
      # TODO arch-specific runner tags to avoid running on wrong arch?
      # loopback device access is required for fai-image-builder (eg Kali)
      # node ephemeral disk is enough for build artifacts (~12GB), but not conversion to VHD for Azure upload

      config: |
        [[runners]]
          [runners.kubernetes]
            namespace = "{{.Release.Namespace}}"
            privileged = true

            [[runners.kubernetes.volumes.host_path]]
              name = "devices"
              host_path = "/dev"
              mount_path = "/dev"
              read_only = true

            [[runners.kubernetes.pod_spec]]
              name = "ephemeral-builds"
              patch_type = "strategic"
              patch = '''
                containers:
                - name: build
                  volumeMounts:
                  - name: builds
                    mountPath: /builds
                - name: helper
                  volumeMounts:
                  - name: builds
                    mountPath: /builds
                volumes:
                - name: builds
                  ephemeral:
                    volumeClaimTemplate:
                      spec:
                        accessModes: [ ReadWriteOnce ]
                        resources:
                          requests:
                            storage: 32Gi
              '''
          [runners.feature_flags]
            FF_USE_ADVANCED_POD_SPEC_CONFIGURATION = true
