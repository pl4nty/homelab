# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.3.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: s4dfarm
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        containers:
          main:
            image:
              repository: ghcr.io/pl4nty/s4dfarm-front
              tag: latest
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
      farm:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        containers:
          farm:
            image:
              repository: ghcr.io/pl4nty/s4dfarm-farm
              tag: latest
            env:
              REDIS_URL: 'redis://s4dfarm-redis:6379/0'
              POSTGRES_DSN:
                valueFrom:
                  secretKeyRef:
                    name: s4dfarm-cnpg-app
                    key: uri
              SERVER_PASSWORD: changeme
      celery:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        containers:
          celery:
            image:
              repository: ghcr.io/pl4nty/s4dfarm-celery
              tag: latest
            env:
              CELERY_BROKER_URL: 'redis://s4dfarm-redis:6379/1'
              POSTGRES_DSN:
                valueFrom:
                  secretKeyRef:
                    name: s4dfarm-cnpg-app
                    key: uri
      httpproxy:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        containers:
          httpproxy:
            image:
              repository: ghcr.io/pl4nty/s4dfarm-httpproxy
              tag: latest
            env:
              REDIS_URL: 'redis://s4dfarm-redis:6379/2'
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
      redis:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        containers:
          redis:
            image:
              repository: redis
              tag: 7.4.3-alpine
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
      externalredis:
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 0
        containers:
          externalredis:
            image:
              repository: redis
              tag: 7.4.3-alpine
            args:
              - --requirepass
              - changeme
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 80
      farm:
        controller: farm
        ports:
          http:
            port: 5000
      celery:
        controller: celery
        ports:
          http:
            port: 5000
      httpproxy:
        controller: httpproxy
        ports:
          http:
            port: 8888
      redis:
        controller: redis
        ports:
          http:
            port: 6379
      externalredis:
        controller: externalredis
        ports:
          http:
            port: 6378
            targetPort: 6379
    configMaps:
      config:
        data:
          default.conf: |
            resolver kube-dns.kube-system.svc.cluster.local;
            resolver_timeout 5s;

            server {
                listen 80;

                server_name default;

                location /api/ {
                    set $backend s4dfarm-farm.default.svc.cluster.local:5000;
                    proxy_pass http://$backend;
                    include proxy_params;
                }

                location /stats/ {
                    set $backend s4dfarm-farm.default.svc.cluster.local:5000;
                    proxy_pass http://$backend;
                    include proxy_params;
                }

                location /celery/metrics {
                    set $backend s4dfarm-celery.default.svc.cluster.local:5000;
                    proxy_pass http://$backend/;
                    include proxy_params;
                }

                location / {
                    gzip on;
                    gzip_static on;
                    gzip_types text/plain text/css text/javascript application/javascript;
                    gzip_disable "msie6";
                    root /front;
                    try_files $uri /index.html;
                    autoindex off;
                }
            }
    persistence:
      config-main:
        type: configMap
        name: s4dfarm-config
        advancedMounts:
          main:
            main:
              - path: /etc/nginx/conf.d/default.conf
                subPath: default.conf
    route:
      main:
        parentRefs:
          - namespace: default
            name: ${CLUSTER_NAME}
        hostnames:
          - ctf-farm.${PUBLIC_DOMAIN}
        rules:
          - backendRefs:
              - name: s4dfarm-main
                port: 80
