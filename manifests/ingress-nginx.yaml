apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: ingress-nginx
  name: ingress-nginx
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  releaseName: ingress-nginx
  targetNamespace: ingress-nginx
  chart:
    repository: https://kubernetes.github.io/ingress-nginx
    name: ingress-nginx
    version: 3.30.0
  values:
    controller:
      externalIPs: ['119.18.13.251']

      # Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
      # By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
      # to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
      dnsPolicy: ClusterFirstWithHostNet

      # Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
      # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
      # is merged
      hostNetwork: true

      ## Use host ports 80 and 443
      ## Disabled by default
      ##
      hostPort:
        enabled: true
        ports:
          http: 80
          https: 443

      ## DaemonSet or Deployment
      ##
      kind: DaemonSet

      global:
        systemDefaultRegistry: ""

      healthStatus: "true"
      healthStatusURI: "/health"
      extraArgs:
        tcp-services-configmap: ingress/tcp-services
        udp-services-configmap: ingress/udp-services
      # service:
        # loadBalancerIP: EXTERNAL_IP
        # annotations:
          # service.beta.kubernetes.io/azure-dns-label-name: DNS_LABEL
      replicaCount: 1
      admissionWebhooks:
        patch:
          nodeSelector:
            kubernetes.io/os: linux
    defaultBackend:
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1 #$2$3$4
    nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/preserve-host: "false"
spec:
  tls:
  - hosts:
    - lab.tplant.com.au
    secretName: tls-secret
  rules:
  - host: lab.tplant.com.au
    http:
      paths:
      - backend:
          serviceName: aks-helloworld
          servicePort: 80
        path: /(.*)
      - backend:
          serviceName: tsuro
          servicePort: 80
        path: /tsuro(/|$)(.*)
      - backend:
          serviceName: tsuro
          servicePort: 80
        path: /(jpro|app)(/|$)(.*)