# Editing MachineConfigs.config.talos.dev/v1alpha1 at node 192.168.1.131
# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:6SVroArnVrJpib9MjN7vKY4zNeyfr+8=,iv:Jv8eX3rOk9esCM0Tjb0FCcXf43uFPiVcnS1Dz66SimE=,tag:gJEU6U/cZr0107H3xRCuJA==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:SvsbAgsQpyosDEeFqkWdHa1J2vlw/5yT2ntSanOc7b+WAzQhxuaVYNjf9+JAqQF0gxzzAkiCoHrKUHVAYzpLouyQa3fl70hB5FFnefmLT8HH2hwthkFmoqiReFqXIqLypxK5jdP3+29ImMi1rzGC7c2csdvPTwesjf7qWJpaFJsaQVnBl3+OaGsp3Gh+HRujQcXjnzx6u5hjEtIDc89UrIEoMc1/PvpFhbE0CkZCFzQbgVdFUlcLGMPpNPM8M8nYJlCI4iqiYvPbItLadFFu3d14yOgZ2WfU+/mPpDPxNyFhK2wkfMIP2f8JQPnZk1oYY3Fcp3n4+BFf0WVgrlr7wJlVHmwoWn+5GwbIzzDa/4H8CiTfsaCsSlP/YqtSc96t4JzZ2wEZSsMoGVBu3cNVF3kRSBVnwk2EzNUZF70/oNqKTWO6M0hFVzUSkT1+K55sRLWXll39O+TKfRavS5Dm2V9TxV2l3CtP3jQH6uH7AHceajbz5Y2eWWkzqvp6RZs5OZTkWpwC/RpIPjE8ydAisFiHROMNjLFMbyYlhYcOmOYipBFJyMq4gUgsxhAuRrnWsSpYipFIFIqsCMvhsW8W3srbW+0kZFBS6L9UlNYdntyOFs4qprS9HrIGsGeZfYVAP1ma69q1L0monCcE9wpvjQrJ6NqLq3wEsBUU+S88FEu7FdLO21YouyVBUd4jdhrHfdfCA8MQPXluV8QMYJDSaceOkjwVlmoI7ySfNZ0N126bZsjQqcdWrlHdpc98pq6nykLy39I2HObGXBDLlFxbKlQx56O5qcnS84t4maDF1g/b9jnyQhdBt1ar5juhc09xLvESBqulyLLKK3xtIwJ2EVqT1hk0y46O3+Zp/MKOXZI3kkap,iv:iqH+iQDrK+zH/FJs8KyqtouvXWgb5QVpWaDeQSHcGr8=,tag:BvIMKmd6PXI1JOwKBbuZTQ==,type:str]
        key: ENC[AES256_GCM,data:0pdUaaHqi/uY6DV4yQmCplG8TVeSK4zM4si3CTgqY9Dy6F3iIa3jpbzU6cU4MJpelqWYcO8kIL8YIGQr6KPLaiyS65zuCch00qbT49W0asx44Ig4+n1K90JlQmYWEam+AZcsub0I79zMJjk+dTto8eYF5VMqW6XYGFUx8jE9iRTFLCrAZJcuMel4e/UnChbwtmxGHnMgB7CgvzmNWWxaGX2MrvW0LYvnwfw717uUedvNJ0L/,iv:3z6wge2uqWq7Cp6nk/YOzzoQtj0FlyiGkts3s12Pr04=,tag:Tuuwr669qkVkLT3nk/rNZA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.32.0
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: "true"
        # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/lib/longhorn
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/lib/longhorn
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # https://factory.talos.dev/?arch=amd64&board=undefined&cmdline-set=true&extensions=-&extensions=siderolabs%2Fi915&extensions=siderolabs%2Fintel-ucode&extensions=siderolabs%2Fiscsi-tools&extensions=siderolabs%2Futil-linux-tools&platform=metal&secureboot=undefined&target=metal&version=1.9.1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.9.1
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # Allows for supplying extra kernel args via the bootloader.
        extraKernelArgs:
            - talos.logging.kernel=tcp://k8s-monitoring-alloy-logs.monitoring-system.svc:5044/
            #     - talos.platform=metal
            #     - reboot=k
            # # Allows for supplying additional system extension images to install on top of base Talos image.
            # extensions:
            #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
            forwardKubeDNSToHost: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Configures the node labels for the machine.
    # nodeLabels:
    #     node.kubernetes.io/exclude-from-external-load-balancers: ""
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # Used to configure the machine's sysctls.
    # MachineSysctls usage example.
    sysctls:
        vm.nr_hugepages: "1664"
        # # Used to configure the machine's sysfs.
        # # MachineSysfs usage example.
        # sysfs:
        #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
        # # Machine system disk encryption configuration.
        # systemDiskEncryption:
        #     # Ephemeral partition encryption.
        #     ephemeral:
        #         provider: luks2 # Encryption provider to use for the encryption.
        #         # Defines the encryption keys generation and storage method.
        #         keys:
        #             - # Deterministically generated key from the node UUID and PartitionLabel.
        #               nodeID: {}
        #               slot: 0 # Key slot number for LUKS2 encryption.
        #
        #               # # KMS managed encryption key.
        #               # kms:
        #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
        #
        #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
        #         # cipher: aes-xts-plain64
        #         # # Defines the encryption sector size.
        #         # blockSize: 4096
        #         # # Additional --perf parameters for the LUKS2 encryption.
        #         # options:
        #         #     - no_read_workqueue
        #         #     - no_write_workqueue
        # # Configures the udev system.
        # udev:
        #     # List of udev rules to apply to the udev system
        #     rules:
        #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # Configures the logging system.
    logging:
        # Logging destination.
        destinations:
            # Where to send logs. Supported protocols are "tcp" and "udp".
            - endpoint: tcp://k8s-monitoring-alloy-logs.monitoring-system.svc:5044/
              # Logs format.
              format: json_lines
              # # Configures the kernel.
              # kernel:
              #     # Kernel modules to load.
              #     modules:
              #         - name: brtfs # Module name.
              # # Configures the seccomp profiles for the machine.
              # seccompProfiles:
              #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
              #       # The `value` field is used to provide the seccomp profile.
              #       value:
              #         defaultAction: SCMP_ACT_LOG
              # # Override (patch) settings in the default OCI runtime spec for CRI containers.
              # # override default open file limit
              # baseRuntimeSpecOverrides:
              #     process:
              #         rlimits:
              #             - hard: 1024
              #               soft: 1024
              #               type: RLIMIT_NOFILE
              # # Configures the node annotations for the machine.
              # # node annotations example.
              # nodeAnnotations:
              #     customer.io/rack: r13a25
              # # Configures the node taints for the machine. Effect is optional.
              # # node taints example.
              # nodeTaints:
              #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: ENC[AES256_GCM,data:HH06Ip69rwCxfLb0aRd0jNuny11M5wAr5Vx5AcFzX4yHWnQKd/YOLMC/GbU=,iv:Ldr4P18lC1tCbimNF0WM67KK8A/2yFJ40qSrTX7/e9Q=,tag:Z7FMcs6eijAlFiJ/TPLCUQ==,type:str]
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:wYYaCFXgECvEzum9JIuyb4+INyueoKXC31sZ4SUvIHKXlAuRUeDfnW8E1pk=,iv:v87Od29dmhoSqLmVtteiygh8ZPMuqn6BB0AsLWI+OnE=,tag:yZ3E0isyx+OwBdvTdO1BMQ==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.1.131:6443
    # Configures the cluster's name.
    clusterName: cluster-1
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:kPKOvgL6Ls2YyvhcM4NHMdCX7fEVLtc=,iv:5tmQzAUKuQqclo+c1oHNuEBpPhxh2d0NXW/wtMRpOLE=,tag:smBGnjD4gjc1sT/f/7angA==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:0Fgd/v/l+5q7aAvL9lxUAOA1mwyyuFgYJlQkJVjmUX1uQn0avEUAVcr2LFs=,iv:w5g0bk4nsWD6nQ2L58b821a3/hiso0JmxAm/UdVkY3I=,tag:kOsn6C1JXCABC5vxc+IzUw==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:katogqdF3aYuI1Y2LpI3XK6WJ8kRezd9Sj2PntdIZjwQ5MuznSeppV33HMM23TSOYB+WmwaJVgdUgiX0RN6j9R2pmAoCwH+HHgl5P2XZUZ7A5hcrVFUxscXEaqVgOowxQoD8D6mBSQ0Vok4NHqiK+/wiFr8Wqq2RP3u2pj/VYGTpf/xW1rxAbCPX28AYBd4mXUiC6aTceG/X22qsCSeN1Fco4zjCtgTEIoJQkZ9O6ZOb8pkSdvZx7WVWEfGueDKh8A74U5ML+xH7OlkvIKEkaWhqZHeySIyn1eytkbXXVcwsjzHZFApy8WkHBz3PmhNt25cqS2DfAGeAP6szFAbbgRaFCUTIHgDTSy8guwaEvX7aWp6Y621oz77hFL9vQ8hwxlV6j8QIIdxhIVT5FP1tm3HKJs+2HiAeAGJyaEc7Ffhavqvq+JemO2pn4uD8VpnLhgo8/grOR2Bjgw2wvDUCf25n5R0qLHMcAH0FIf3ptEpajQZHC0Ros+TpBgTDbVT3oEAQuHu/oMq4ljrnlJoKxqM4FNiHNMkLaAUmqgOLFyTKWegNzh0uuwuji7M1lu3nrNYVzv+nEV1zHUGIl/Nq2nIbakwj+lRJrdWyvSol/c3B5G1MSxIQwbRwGBqdr2R/bThm6w0CHnxB/vH4hpMngFJUE5DUOuqsmVXBguz7CBuGEL6rFAYATzhhJ0p/RZ4sQ+7uAMs5BZSo9dJJ8c+76N8Arp3SZJC00qK82m2jJXSZYq4r2rnmTzvLKUCw7IWOIgjppwYIodWGP6o/qGrVIWb7tK+eUzT6jNke08jZ+s9ncYn0fEWkPIae6u5k9tUGdWgji4E8UU3HWFbzC/BqV76ovIUwfJrX/CeVGuNCrrg+VxVxJBEm9BQkMZIoIVSynz58papo+imaCaEkAOdoscjAKJpKtLg8kNQeR+8nXU5SO19GZiypQNrUZ7sMe84pTv98lI3/eXz1FdJhMdweSIqYuEYAbPr1uLFl4l+SUrqXLJIlz+y+W8Vxc6bzEMGAB+qU5kNwdPraPv4MUZcg6qkaHz0=,iv:aGXJ4WuSC8Ni1yCzPvpeNuLHa0lmKPBwhCuLbhCscRE=,tag:sPhTR8Pfz026jNxFuJMbPw==,type:str]
        key: ENC[AES256_GCM,data:xYJKb/y8Y/ghqDemJqx0d+k2MvwqG5oSs9yBj/Ppatuac04hVTpmH271kx033PQS7Mpyh9zaLqIuNF2bWuoXI1S2lxA9Em1uR+GKMdOBxshstDOlYr+SXYczhrN5F1BdMZOWnZ460LUBlMi/Epj+Fd5SEygdcjbeIaqeMkRGIUxd3lXjkFRZrvIBDRBhRzllDFwxi3pXFHPjy0L5G5VKA+UMIL0xoE6cnpENs4SamsWQSa9I+i8odCaDQsCgW+UWadbrzD5QwrLz0XONLjk/nakqvK9155KDQEm+m2uSMLv1N+6hU4x+3ged/U5pxSlSxpgIcK0FNtTSO50g3TvTpJSem3LGYiqohMuuUMOQhPmzI5GJdKr1Atcm/vQzi1Q2nRenpXsjBerVN/zUwVEJbg==,iv:X8G1seHaI9RfCbuTU4moz4EkhNois1G40LOn6C+PmUw=,tag:V+bv1WwS/Kr6Ynl49Dcl5Q==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:aVnavwp4h9Jb9YRAIUUAtc/z7qvAzezb6SBIati15PXOFm5Lh3c8WQBDfv/a4YnHGBPycMRJ8OtaHHTpz2/Zxok/PU/8uwdeauGhk7JeLc9FSZGcLJR1EtaY+SrQxlSgqpwjzQvLyJ92hPYg9CGyl70jYzv+1WgeoWPkpS0AEDbKPTJ3IxHRXVUePIW6BPHIOS5ijPFjNCCnbjNlZJqAk0MFfrbtGIEFSDGThVIbjwbvYgqc3ksfDJRoau08AZ95HTiQAWy4NARRCA5chyfZ/2Lq70W6DZi3WDGb21pv9A47vukdl+AE6YfCM9RgJn5X6F6IlGpXg6XT59XUOhpYtXOMtY84EPLxO8doiZs90barCNh0cytkhqnu/JJlEMN8B7b+sDaZgQyKfGktbzpV8FCiuTt6XwMTB7fy0vki/qxz6gUAShs3Y4iaTRJwsK2HeKYgdFjxQJqrSpdOBwFMlG4qkB8XVfEHgHyw1dcKVPa6AlicL7ioCY9oLp6iOIidaI9ZtPZqPMEA+/LCZNI7e3splJ4Wm5ZBBZTmhr2hhswpwgAIyuKKykNc4Q3ebpjyTemwE2IHS/ikr+Vk0YK1WL0BivRo4fCAIhx4rthztDHE1uJNUI4KhgeHkoq8o7BmSheSDM8U4giJXtPwY/Y1uiNwWkSZoVB73MrpPk3Z+xKTjRDHW3QKS9v8h6+gSD4n/Djh7bB1/5xdO5cKG/3ccuNMd4kDs/PXLhpEYL3VfkvSdcXTXNLrDPXTj8/PInprySkKxWWpbb/jEk6N+dX2peW3OF4v0XNf1xpjBY+X8ruPL4QJACP2cF3X6K9QxOhz3L3WfS+s7J86RWaPfIvurbOFDF/oTs0JuNiAxPvCt7Vjsuhinm4H/rQXBVxQcp5hyoE3WLjE/8mxbiY3GoUiKjJBhlmHoYQeeX/iFuDzBmJhqLQgUs2rJ6i9bQLbPTer,iv:22mKE9hxDtRhHpBaUkVSL2S0tWsxwhvf7ho6rAvSDYA=,tag:gCvbJY7a94J4bLbIvL5qXw==,type:str]
        key: ENC[AES256_GCM,data:86yHw/BrvKsfTdCAnQC0a1lICQXes9WykRhYfdvp4lZ9fAxSxkozRaCJEE2sB3VscK9qtf0stPnCGpGI3j2Pxwaqyp804bgwSIU0MaPLB2PcKFrUfXtLUreBdg8xHnF1RJGYLHvndjU8maU1UXuM+XqsSI2M4p8cc6DeNKuh5PD+T8wAXTiaXChSzg2sssI70BtU7qt6a+80DByqlCk1VIviHnxW7ckiKN2AxPqCiqPpH/ReNYl2DTaUpqgXdXU2PaDtW5ZlhQtiKCz3FUBtg0zAh9NDuAWA3sQMMlvmk7Sf/QawWkHGCFozmWl86yXbkhHXiBZnJOyiN1Cf1UtEBGNczXjGHvBItySFNYxk/P7vHSRJtEFX9r4k1LyXshGEJjMzG0FzLcpV+hopnheGgA==,iv:uwqoIoV94bYWqTCeU4y92B8FEuLIv2u+Jy+ez4sb2u8=,tag:ymmdCCGSIhScTtDezbFFHg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:FVUOEdL0c1nZUnvlqSs6bbp3fN8gX8RRHj9o3kvan0Ijmrh6GDqb6gfuBF2PoPtsnWnbZ3ZMgyTd2EumNdwuOMm9g6FnHK/+cnNX/8PD1RW17SpZLr6nStYx95T2R85+E7sR+DgzKCeJsldAlQ5KOWPiaxTWEsiF69QDxT+7llbY+u2WkbOFFEjeakrwNFfSasRxZz6ZnJ71KcMEbeE8nYzIW0q5wlbG5DgzRA7gC0XV+h35PdHzXjJgCSqi2SeYj4CWxule7EpZwhRGhcDfnFBuCPri1TqdUG04Py4yI+5Kf6Ue1kA1t52Qgcv+nKIqZbr1j398QLfoaXqx9C0YwDu/XHKZBfxQhulOmd50VtGzWjLuUCvJwckKRggaJ/PRMOjYcGPFZc6OUh/zvZA9/A==,iv:R6DqQwQsPSAPap6TE5Xz4C8jr3KwMnfGfWkaOiO/gN8=,tag:BMFlwd+hfu+dIRuxhtmuPw==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.32.0
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.1.131
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
                  # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
                  # authorizationConfig:
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: webhook # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: Deny
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         matchConditions:
                  #             - expression: has(request.resourceAttributes)
                  #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: in-cluster-authorizer # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: NoOpinion
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.32.0
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.32.0
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.32.0
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:I/MwO0QkRLeWkl5gVkqaHXBwoChfLHLQzxx7ZM3bWdTepmTOLJFtEsJvXmaj+CTTPpjcv6EDXjcSNnj5+z1gTPy3/YVKTQuyD6kQA39P7lQOYdLzuI8EJzIMTFvNZ3efrRHEHH+YzAKd/9b5I7DSKDYuwx2zWQIUl5hSjz/K91M2t9YIJwYpncyn6/crgKODp/W/SOOirM5wc5aHgbWxVqoPg3fIbC98EeveB77sjzOoFmabfjDGg/xgVaVe8gDEbGfcY4PQ/YdzvD/v/0pJJgxPFzaTM9HRwzn1WqlMTC00CQoNg3RyFFE39tgkCIjoiNpc3fEtV4y2nnAUSat0HhhWieP0DJjqiyJwLqXRhX2yI4eVVfrJncjUJNiha5+FOmqR1P0FkLbru2vg3Nf7CC60FynPN8MJXK5UEl10XHmaLxH1AbFsO+uwb+jNn1mXDKijEgwfV4hwKHJT74j+wnWa1xKhYGtIWB2rA621Nwsi7C1mJuLx01VQ/H4oH7mVda4syCAumXlce3Pxz6JE90toraqpAt96p8yBKHez26jJAxBZURntqglwpjnHFdTpbCyXOX5SjvCnP7OEdDEc0JMskw1jpaQMKY0y1V6o8eaRfX/kt6hOJwOOTG2v89IOSNkM2KYNIMKOsNkHgEoj0l0V15o/B/C1yEQ4AEhTgqSQut1BhaTBjdPz6snB0XqP/6z+i7nBeeFfMdWfFdwmRV03nr4/MFv52LJBljQTDteldkZHt5k3o/+1RY9PpK3vTLoBD5F3USfIcVOAoZseQWBH6HTedBYdKcUiKs+WbxvF2eA1ELrw07KaboRcW3mHSd760yQCX6/QSgCCGLwn4gO9zu9z0vqYOwcsTqB4NLwUxY9q7izGD7DdNCzr5hTEolwpOVMIKEceDXQHtGkIUr/N2Yhtb45d8mpn9GX47lmR+bJrMEQGQxRHPX/AQC6i2T/iSTo7h9dROkARNr0N8QDUu1kftKmP+pOoNhQa/TTXhPbSMD3YjWzFoz1Lqz040E9dIg==,iv:UA0VdxbsRXvtPjLZ7lp5hC89KqPldJn63fjhTZnMtpE=,tag:IPe4AAJHGntGvgxdBhSS4Q==,type:str]
            key: ENC[AES256_GCM,data:bmmuICNXllNtoYFybAqEnJNh3lxQayJCKZxlIGSpUQkKAlNYA+us1kl4L5c41OExZtELouJBc07l5HNlnxv/Zskc+Mnq/kibReele5zXGmLJPaBslfHohn8QsOpxOlUL9S2xdYirvQr6ifyaVAA9Qx1NnyT9uyoArZifS/ayDtII9lZPw81P7SkLY9d4xwSfujCV8nqxOnNJg6uB9h68rehKhiR49mY/0yZ11nANoSnXdIdc5TmJzYcJcc03cWzSczhultfymkOlweI0lhd/f5PJxO5JkrZa1FIPeXiSljFBDUlp0A+DWY1mno9ip944xl/JWLklM0d6MG6HSHRuWIyMIPKX/x0gQetd9THvnehdZDCaR8b2LtWLf2IE1EXKKJAk+mdvmhZfatNir1h4yg==,iv:eutPMg4ndWlLc2VPnOMh3PWoZrxtUVEWkqQ81iEpkNA=,tag:lP+H2Q5S5i0ro4ieLLd47g==,type:str]
            #ENC[AES256_GCM,data:E1K80jCWWqx2kpmI63N0G7pCPc+Rlz4h+3mh/mnjrjeNYdjDON2kJAiKlE9X4svZWgPUfCUIag==,iv:yOUL+HkpfbHl85OmTGw6aXvV8pOgJpaWJRfQQeNMPo4=,tag:3AWGdOPk0gfG52xS8wHacg==,type:comment]
            #ENC[AES256_GCM,data:6mUBZhUKPZbHpNh8QAzZFXqUZkV56Fc6nvKydWCpALqlKNs75SbneFkcEn4=,iv:EOA4anWw2hCkKoQ+RNmqhxePVqmYaGKNOi36t+2cIAo=,tag:oC5fpPgjv5jMKWLAPO2gRQ==,type:comment]
            #ENC[AES256_GCM,data:ZvIeckKL4tzEIMxma4hS/vqdzKkEP/f9VYDwZJIJKbMTavR30t1VJ3DU6Hq9AhBpZH8KFtuMmo9fUTITfnLbiAO3WU9eCv4x9FZd4sL5+6b/+nbq463YFAs=,iv:g4+AnyvL0sDGMlyDQDLVanmwAleot829YOk1083Y9MY=,tag:XG7y9uFaYEuEDKweecLNbg==,type:comment]
            #ENC[AES256_GCM,data:Li0Q0KTzQOc5B6+P11mXA6xutA==,iv:X08EKcZv7TLCTAFBR4XaikyVREhxIRDP6tYQbZ1H/oA=,tag:FF19/vK/fd8D1N7nd7eD/w==,type:comment]
            #ENC[AES256_GCM,data:hfGglgBtTO2CQjO+puCXLWQ=,iv:ICnYMZ3MJKruqK/2v3NiTNf6EG4m2m+2skSPq2KrfLk=,tag:eBaQRZWzdp05eZpO1cD0mA==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.12.0 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age18k9804sxqzuxn3pka0x6rgdqp0g7gm7w99g4lu43meqkl9s8lvrsl6n0vh
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAwZGJFODBIRGJxVmtUd3l2
            OWIwbjBiY1M1ejdBRjRhdjdiODhHYndaY0FnCmJzVkd0Ti9xTlNUeEV4ajk4cXlw
            b3pqZnJ5V1dMRE11dWphU0tmMDlNb2sKLS0tIGV6UTF4dk1FdVpYcTIvYVNQWjY4
            eUc5bG02d2g1WnJVZUpDdnNETFhnc1EKRqVoBX/o4N5Vstq8WlF6z2mFs2STQfd5
            GNyMloh8YKZ4SI38yTnxkfPjX43VxP3OEg2LydsPonm/y4zXMqWWag==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-02-22T07:45:34Z"
    mac: ENC[AES256_GCM,data:Z5IIaekJTsnqA2nvBYeSSRtP1yu5bdIqDFZbIz+aK3qTD/0017qHtJu5gAaLWzMjGh6C/14Tl/CwgH/s0M8j8/dROOyrHRdZsDQnss4uZ7+cLyZ/HFq1hI+p8WFo1b16hNjuy6Ad8WDGs19NyldcCbeAhVFk5xAjEbSkKJ0loXY=,iv:PcpG4bdIker+AbWCzoP18qkY5fM+wgeO1qUfkpu/etE=,tag:OmhClhNc4C7MgAvO+cS67Q==,type:str]
    pgp: []
    encrypted_regex: ^(token|crt|key|id|secret|secretboxEncryptionSecret|ca)$
    version: 3.9.1
